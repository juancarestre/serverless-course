name: Deploy DEV

on:
  pull_request:
    branches: [ master ]

jobs:
  build-js-layer-deps:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    name: Build SLS Layer - Prod
    container:
      image: "lambci/lambda:build-nodejs12.x"
    steps:
      - uses: actions/checkout@v2

      - run: |
          npm install --production
          mkdir nodejs
          mv node_modules nodejs
          zip -r nodejs.zip nodejs/

      - uses: actions/upload-artifact@v2
        with:
          name: pythondeps
          path: nodejs.zip

  testing-changes:
    runs-on: ubuntu-latest
    name: Build/Test
    steps:
    - uses: actions/checkout@v2

    - name: NPM - Install dependencies
      if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
      run: 'npm install'

    - name: Run Tests
      run: |
        npm run test

  deploy-env:
    name: Deploy Lambda
    runs-on: ubuntu-latest
    needs: testing-changes
    steps:
    - uses: actions/checkout@v2.0.0

    - name: NPM - Load cached venv
      id: cached-npm-dependencies
      uses: actions/cache@v2
      with:
        path: node_modules
        key: npm-${{ runner.os }}-${{ hashFiles('**/package.json') }}

    - name: NPM - Install dependencies
      if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
      run: 'npm install'

    - name: Deploy using sls
      run: 'npx sls deploy'
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
          Your SLS App was deployed!
          Awesome :D

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
